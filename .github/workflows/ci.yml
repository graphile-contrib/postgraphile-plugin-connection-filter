name: Node CI

on: push

jobs:
  lint:
    runs-on: ubuntu-latest

    env:
      TERM: xterm
      FORCE_COLOR: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Install
        run: yarn --immutable --ignore-engines

      - name: Check Code Format
        run: yarn format:check

      - name: Lint Code
        run: yarn lint

      - name: Typecheck
        run: yarn typecheck

  test:
    runs-on: ubuntu-latest

    env:
      CI: true
      PGVERSION: ${{ matrix.postgres-version}}
      TEST_DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/graphile_test_c
      TERM: xterm
      FORCE_COLOR: 1

    strategy:
      fail-fast: false
      matrix:
        postgres-version:
          - 11
          - 12
          - 13
          - 14
          - 15
        node-version:
          - 14.x
          - 16.x
          - 18.x

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - "0.0.0.0:5432:5432"
        # needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5 --name postgres

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure PostgreSQL
        run: |
          cat .github/workflows/ci/docker-entrypoint-initdb.d/010-setup.sh | docker exec -i postgres bash

      - name: Install
        run: yarn --immutable --ignore-engines

      - name: Test
        run: yarn test
